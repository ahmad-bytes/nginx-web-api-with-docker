events {
    worker_connections 1024;
}

http {
    # Upstream configuration for load balancing
    upstream weatherapi_backend {
        # Load balancing methods:
        # round_robin (default) - requests distributed evenly
        # least_conn - route to server with least connections
        # ip_hash - route based on client IP (sticky sessions)
        
        least_conn;  # Use least connections method
        
        # API instances
        server weatherapi-1:8080 max_fails=3 fail_timeout=30s;
        server weatherapi-2:8080 max_fails=3 fail_timeout=30s;
        server weatherapi-3:8080 max_fails=3 fail_timeout=30s;
        
        # Health check configuration
        keepalive 32;
    }

    # Logging configuration
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time" '
                       'upstream="$upstream_addr"';

    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint for the load balancer itself
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Proxy all requests to the upstream
        location / {
            proxy_pass http://weatherapi_backend;
            
            # Headers for proper forwarding
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 16 8k;
            
            # Health check headers
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }

        # API-specific configurations
        location /api/ {
            proxy_pass http://weatherapi_backend;
            
            # API-specific headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Load-Balancer "nginx";
            
            # Longer timeout for API calls
            proxy_read_timeout 60s;
        }

        # Static content caching (if needed)
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            proxy_pass http://weatherapi_backend;
            proxy_cache_valid 200 1h;
            add_header X-Cache-Status $upstream_cache_status;
        }
    }
}